parameters:
- name: PackageName
  type: string
  default: 'azure-quantum'
- name: CondaEnvironmentSuffix
  type: string
  default: ''

steps:
# This step is needed to successfully install Jupyter on the user base (pip install --user)
# and later install the IQ# kernel.
- pwsh: |
    $PythonUserBase = "$($(CondaPath)/python -c 'import site; print(site.getuserbase())')/bin"
    "PythonUserBase: $PythonUserBase" | Write-Host
    "##vso[task.prependpath]$PythonUserBase" | Write-Host
  displayName: Add Python user base to PATH

- pwsh: |
    (& "$(CondaPath)/conda" "shell.powershell" "hook") | Out-String | Invoke-Expression
    ./bootstrap.ps1 `
       -PackageName '${{ parameters.PackageName }}' `
       -CondaEnvironmentSuffix '${{ parameters.CondaEnvironmentSuffix }}' `
       -FromSource $True
  displayName: Create ${{ parameters.PackageName }}${{ parameters.CondaEnvironmentSuffix}} conda environment and install ${{ parameters.PackageName }} package from source

- pwsh: |
    (& "$(CondaPath)/conda" "shell.powershell" "hook") | Out-String | Invoke-Expression
    build/pack.ps1 -PackageName ${{ parameters.PackageName }}
  displayName: Pack ${{ parameters.PackageName }}
  condition: eq(variables.CondaEnvironmentSuffix, '')

- pwsh: |
    (& "$(CondaPath)/conda" "shell.powershell" "hook") | Out-String | Invoke-Expression
    build/test.ps1 `
        -PackageName '${{ parameters.PackageName }}' `
        -CondaEnvironmentSuffix '${{ parameters.CondaEnvironmentSuffix}}'
  displayName: Test ${{ parameters.PackageName }}
