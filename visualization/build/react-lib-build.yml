parameters:
  - name: jslib
    type: string
  - name: rootDirectory
    type: string
  - name: project
    type: string
  - name: reactnodemodules
    type: string
  - name: tests
    type: string
  - name: projectname
    type: string
  - name: outputDirectory
    type: string   

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"
    displayName: "Install Node.js"

  # Add later
  # - task: npmAuthenticate@0
  #   inputs:
  #       workingFile: "<path>/.npmrc"
  #   displayName: "npm authenticate"

  - script: |
      npm install
      npm run build
    workingDirectory: "${{ parameters.project }}"
    displayName: "npm install and build react-lib"

  - script: |
      npm link
    workingDirectory: "${{ parameters.project }}"
    displayName: "npm link react-lib"

  - script: 
      npm link
    workingDirectory: "${{ parameters.project }}/${{ parameters.reactnodemodules }}"
    displayName: "npm link react"

    
  - script: 
      npm link react ${{ parameters.projectname }}
    workingDirectory: "${{ parameters.jslib  }}"
    displayName: "npm link react and quantum visualization to js-lib"

  - script: |
      npm install
      npm run build
    workingDirectory: "${{ parameters.jslib  }}"
    displayName: "npm install and build js-lib"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "${{ parameters.jslib }}/dist"
      Contents: "**"
      TargetFolder: "${{ parameters.outputDirectory }}"
    displayName: "Copy build artifacts to output directory"


  - task: Npm@1
    displayName: npm run test
    inputs:
      workingDir: "${{ parameters.project }}"
      command: "custom"
      customCommand: "run tests"

  - task: PublishTestResults@2
    displayName: "publish test results"
    condition: succeededOrFailed() 
    inputs:
      testResultsFiles: "${{ parameters.tests }}/test-results.xml"

  - task: PublishCodeCoverageResults@1
    displayName: "Publish Code Coverage Results"
    condition: succeededOrFailed() 
    inputs:
      codeCoverageTool: "cobertura"
      summaryFileLocation: "${{ parameters.project }}/coverage/cobertura-coverage.xml"
