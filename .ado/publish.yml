trigger: none
pr: none

parameters:
- name: Build_Type
  type: string
  values:
    - dev
    - rc
    - stable
  default: 'dev'
- name: Patch_Number
  type: number
  default: 0
- name: Deploy_Azure_Quantum_Package
  type: boolean
  default: True
- name: Create_GitHub_Release
  type: boolean
  default: False
- name: Publish_PyPi_Packages
  type: boolean
  default: False

variables:
- name: OwnerPersonalAlias
  value: 'billti'

jobs:
- job: "Build_Azure_Quantum_Python"
  pool:
    vmImage: 'windows-latest'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'

    - script: |
        pip install wheel
      displayName: Install wheel

    - script: |
        pip freeze
      displayName: List installed packages

    - script: |
        python set_version.py
      env:
        BUILD_TYPE: ${{ parameters.Build_Type }}
        PATCH_NUMBER: ${{ parameters.Patch_Number }}
      displayName: Set version

    - script: |
        cd $(Build.SourcesDirectory)/azure-quantum
        python setup.py sdist --dist-dir=target/wheels
        python setup.py bdist_wheel --dist-dir=target/wheels
      displayName: Build azure-quantum package

    - publish: $(Build.SourcesDirectory)/azure-quantum/target/wheels/
      artifact: azure-quantum-wheels
      displayName: Upload azure-quantum artifacts

- job: "Test_Azure_Quantum_Python"
  pool:
    vmImage: 'windows-latest'
  
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.11'

    - script: |
        pip install pytest pytest-azurepipelines pytest-cov
      displayName: Install pytest dependencies

    - script: |
        pip freeze
      displayName: List installed packages
    
    - script: |
        cd $(Build.SourcesDirectory)/azure-quantum
        pip install .[all]
        pytest --cov-report term --cov=azure.quantum --junitxml test-output-azure-quantum.xml $(Build.SourcesDirectory)/azure-quantum
      displayName: Run azure-quantum unit tests
    
    - task: PublishTestResults@2
      displayName: 'Publish tests results (python)'
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Azure Quantum Python Tests'

- job: "Approval"
  dependsOn:
  - "Build_Azure_Quantum_Python"
  - "Test_Azure_Quantum_Python"
  pool: server
  timeoutInMinutes: 1440 # job times out in 1 day
  steps:
  - task: ManualValidation@0
    timeoutInMinutes: 1440 # task times out in 1 day
    inputs:
      notifyUsers: ''
      instructions: 'Please verify artifacts and approve the release'
      onTimeout: 'reject'

- job: "Publish_Python_Packages"
  dependsOn: Approval
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.11'

  - script: |
      python set_version.py
    env:
      BUILD_TYPE: ${{ parameters.Build_Type }}
      PATCH_NUMBER: ${{ parameters.Patch_Number }}
    displayName: Set version

  - download: current
    artifact: azure-quantum-wheels
    displayName: Download azure-quantum artifacts

  - task: CopyFiles@2
    condition: ${{ parameters.Deploy_Azure_Quantum_Package }}
    displayName: Copy azure-quantum artifacts
    inputs:
      SourceFolder: '$(Pipeline.Workspace)/azure-quantum-wheels'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/target/wheels'

  - script: |
      ls $(Build.ArtifactStagingDirectory)/target/wheels/*
    displayName: List Py Artifacts to publish

  - task: GitHubRelease@1
    condition: ${{ parameters.Create_GitHub_Release }}
    displayName: Create GitHub Release
    inputs:
      gitHubConnection: AzureQuantumOauth
      repositoryName: Microsoft/azure-quantum-python
      action: create
      tagSource: 'userSpecifiedTag'
      tag: azure-quantum_v$(PYTHON_VERSION)
      isDraft: True
      isPreRelease: ${{ ne(parameters.Build_Type, 'stable') }}
      target: $(Build.SourceVersion)
      addChangeLog: False
      assets: |
        $(Build.ArtifactStagingDirectory)/target/wheels/*

  - task: EsrpRelease@4
    condition: ${{ parameters.Publish_PyPi_Packages }}
    displayName: Publish Py Packages
    inputs:
     ConnectedServiceName: 'ESRP_Release'
     Intent: 'PackageDistribution'
     ContentType: 'PyPi'
     FolderLocation: '$(Build.ArtifactStagingDirectory)/target/wheels'
     Owners: '$(OwnerPersonalAlias)@microsoft.com'  # NB: Group email here fails the task with non-actionable output.
     Approvers: 'billti@microsoft.com'
     # Auto-inserted Debugging defaults:
     ServiceEndpointUrl: 'https://api.esrp.microsoft.com'
     MainPublisher: 'QuantumDevelpmentKit'          # ESRP Team's Correction (including the critical typo "Develpm").
     DomainTenantId: '72f988bf-86f1-41af-91ab-2d7cd011db47'
