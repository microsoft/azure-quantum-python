interactions:
- request:
    body: null
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-identity/1.17.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/v2.0/.well-known/openid-configuration
  response:
    body:
      string: '{"token_endpoint": "https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/oauth2/v2.0/token",
        "token_endpoint_auth_methods_supported": ["client_secret_post", "private_key_jwt",
        "client_secret_basic"], "jwks_uri": "https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/discovery/v2.0/keys",
        "response_modes_supported": ["query", "fragment", "form_post"], "subject_types_supported":
        ["pairwise"], "id_token_signing_alg_values_supported": ["RS256"], "response_types_supported":
        ["code", "id_token", "code id_token", "id_token token"], "scopes_supported":
        ["openid", "profile", "email", "offline_access"], "issuer": "https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/v2.0",
        "request_uri_parameter_supported": false, "userinfo_endpoint": "https://graph.microsoft.com/oidc/userinfo",
        "authorization_endpoint": "https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/oauth2/v2.0/authorize",
        "device_authorization_endpoint": "https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/oauth2/v2.0/devicecode",
        "http_logout_supported": true, "frontchannel_logout_supported": true, "end_session_endpoint":
        "https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/oauth2/v2.0/logout",
        "claims_supported": ["sub", "iss", "cloud_instance_name", "cloud_instance_host_name",
        "cloud_graph_host_name", "msgraph_host", "aud", "exp", "iat", "auth_time",
        "acr", "nonce", "preferred_username", "name", "tid", "ver", "at_hash", "c_hash",
        "email"], "kerberos_endpoint": "https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/kerberos",
        "tenant_region_scope": "WW", "cloud_instance_name": "microsoftonline.com",
        "cloud_graph_host_name": "graph.windows.net", "msgraph_host": "graph.microsoft.com",
        "rbac_url": "https://pas.windows.net"}'
    headers:
      content-length:
      - '1826'
      content-type:
      - application/json; charset=utf-8
    status:
      code: 200
      message: OK
- request:
    body: client_id=PLACEHOLDER&grant_type=client_credentials&client_assertion=PLACEHOLDER&client_info=1&client_assertion_type=PLACEHOLDER&scope=https%3A%2F%2Fquantum.microsoft.com%2F.default
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '181'
      Content-Type:
      - application/x-www-form-urlencoded
      User-Agent:
      - azsdk-python-identity/1.17.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
      x-client-current-telemetry:
      - 4|730,2|
      x-client-os:
      - win32
      x-client-sku:
      - MSAL.Python
      x-client-ver:
      - 1.30.0
    method: POST
    uri: https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000/oauth2/v2.0/token
  response:
    body:
      string: '{"token_type": "Bearer", "expires_in": 1756430027, "ext_expires_in":
        1756430027, "refresh_in": 31536000, "access_token": "PLACEHOLDER"}'
    headers:
      content-length:
      - '135'
      content-type:
      - application/json; charset=utf-8
    status:
      code: 200
      message: OK
- request:
    body: 'b''{"containerName": "job-00000000-0000-0000-0000-000000000001"}'''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '64'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: POST
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/storage/sasUri?api-version=2022-09-12-preview&test-sequence-id=1
  response:
    body:
      string: '{"sasUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '212'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/xml
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-storage-blob/12.20.0 Python/3.9.19 (Windows-10-10.0.22631-SP0)
      x-ms-date:
      - Thu, 29 Aug 2024 01:13:47 GMT
      x-ms-version:
      - '2024-05-04'
    method: GET
    uri: https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?restype=container&sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER
  response:
    body:
      string: "\uFEFF<?xml version=\"1.0\" encoding=\"utf-8\"?><Error><Code>ContainerNotFound</Code><Message>The
        specified container does not exist.\nRequestId:51ee4a92-501e-0033-2cb0-f91cc1000000\nTime:2024-08-29T01:13:48.2069979Z</Message></Error>"
    headers:
      content-length:
      - '223'
      content-type:
      - application/xml
      x-ms-version:
      - '2024-05-04'
    status:
      code: 404
      message: The specified container does not exist.
- request:
    body: null
    headers:
      Accept:
      - application/xml
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '0'
      User-Agent:
      - azsdk-python-storage-blob/12.20.0 Python/3.9.19 (Windows-10-10.0.22631-SP0)
      x-ms-date:
      - Thu, 29 Aug 2024 01:13:47 GMT
      x-ms-version:
      - '2024-05-04'
    method: PUT
    uri: https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?restype=container&sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER
  response:
    body:
      string: ''
    headers:
      content-length:
      - '0'
      x-ms-version:
      - '2024-05-04'
    status:
      code: 201
      message: Created
- request:
    body: null
    headers:
      Accept:
      - application/xml
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-storage-blob/12.20.0 Python/3.9.19 (Windows-10-10.0.22631-SP0)
      x-ms-date:
      - Thu, 29 Aug 2024 01:13:47 GMT
      x-ms-version:
      - '2024-05-04'
    method: GET
    uri: https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?restype=container&sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER
  response:
    body:
      string: ''
    headers:
      content-length:
      - '0'
      x-ms-lease-state:
      - available
      x-ms-lease-status:
      - unlocked
      x-ms-version:
      - '2024-05-04'
    status:
      code: 200
      message: OK
- request:
    body: 'b''BC\xc0\xde5\x14\x00\x00\x05\x00\x00\x00b\x0c0$JY\xbef\x8d\xfb\xb4\xaf\x0bQ\x80L\x01\x00\x00\x00!\x0c\x00\x00\xd6\x01\x00\x00\x0b\x02!\x00\x02\x00\x00\x00\x16\x00\x00\x00\x07\x81#\x91A\xc8\x04I\x06\x1029\x92\x01\x84\x0c%\x05\x08\x19\x1e\x04\x8bb\x80\x14E\x02B\x92\x0bB\xa4\x102\x148\x08\x18K\n2R\x88Hp\xc4!#D\x12\x87\x8c\x10A\x92\x02d\xc8\x08\xb1\x14
      CF\x88 \xc9\x012R\x84\x18*(*\x901|\xb0\\\x91 \xc5\xc8\x00\x00\x00\x89 \x00\x00\x15\x00\x00\x002"H\t
      bF\x00!+$\x98\x14!%$\x98\x14\x19\''\x0c\x85\xa4\x90`Rd\\ $e\x82\x80\x1a\x010\x01\xa00G\x80\xd00\x02
      T\xb0P\xa9\x00\x99\xc6\x08\x00:F\x00\x88\x92\x19\x00B\xb4\x86\x00\xcc\x00\x1a"7\x100G\x00\x06s\x04\xc1\x1c\x01(\x00\x00\x00Q\x18\x00\x00(\x00\x00\x00\x1b\xd6!\xf8\xff\xff\xff\xffa(\x07w\xa0\x07y\xc8\x87_\x80\x87wH\x07w\xa0\x07`x\x87z\xa0\x07x\xa8\x07z\xf8\x05v\x08\x07q(\x07vH\x07w8\x87_\x98\x87q@\x87rh\x87p\x00\x88xH\x07y\xf8\x05x\x90\x87w0\x87t`\x87r\x98\x07`\x1c\xeaa\x1e\xe8\xe1\x1d\xda\x01
      \xe4\xa1\x1c\xe2\xa1\x1e\xd2A\x1e\xca\x81\x1c~\xc1\x1d\xea\xa1\x1d~!\x1e\xeaA\x1c\xd2\x81\x1e\xe6\x01\x98\x03\x80\x90\x87r\x88\x87zH\x07y(\x07r\xf8\x05w\xa8\x87v\xf8\x05y(\x87y\xa8\x07v\xa0\x87y\x00\xe0\x00\x00\x00\x00\x00I\x18\x00\x00\x01\x00\x00\x00\x13\x82\x00\x00\x1a!L\x0e\x97qZ>\xae\xa7\xe9\xad\x98m6\xa4\x02\x96\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x01\x86TKV\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00,\xc0\x90\x8a\x0c\xae\x04\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\x01\x86T{\xa0-@\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0b0\xa4\xaa\x05\xcc\x01\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00X\x80!U;X\t\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x02\x0c\xa9F\xe2J\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x16`H\xa5\x13V\x02\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xb0\x00C*\xb8\xb8\x12
      \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x05\x90\xd8 PT;\x00\x00 \x0b\x04\x00\x00\x00\x07\x00\x00\x002\x1e\x98\x10\x19\x11L\x90\x8c\t&G\xc6\x04C\x8a%P\x0e#\x00$G\x00\x00\x00\x00\x00\xb1\x18\x00\x00\x97\x00\x00\x003\x08\x80\x1c\xc4\xe1\x1cf\x14\x01=\x88C8\x84\xc3\x8cB\x80\x07yx\x07s\x98q\x0c\xe6\x00\x0f\xed\x10\x0e\xf4\x80\x0e3\x0cB\x1e\xc2\xc1\x1d\xce\xa1\x1cf0\x05=\x88C8\x84\x83\x1b\xcc\x03=\xc8C=\x8c\x03=\xccx\x8ctp\x07{\x08\x07yH\x87pp\x07zp\x03vx\x87p
      \x87\x19\xcc\x11\x0e\xec\x90\x0e\xe10\x0fn0\x0f\xe3\xf0\x0e\xf0P\x0e3\x10\xc4\x1d\xde!\x1c\xd8!\x1d\xc2a\x1ef0\x89;\xbc\x83;\xd0C9\xb4\x03<\xbc\x83<\x84\x03;\xcc\xf0\x14v`\x07{h\x077h\x87rh\x077\x80\x87p\x90\x87p`\x07v(\x07v\xf8\x05vx\x87w\x80\x87_\x08\x87q\x18\x87r\x98\x87y\x98\x81,\xee\xf0\x0e\xee\xe0\x0e\xf5\xc0\x0e\xec0\x03b\xc8\xa1\x1c\xe4\xa1\x1c\xcc\xa1\x1c\xe4\xa1\x1c\xdca\x1c\xca!\x1c\xc4\x81\x1d\xcaa\x06\xd6\x90C9\xc8C9\x98C9\xc8C9\xb8\xc38\x94C8\x88\x03;\x94\xc3/\xbc\x83<\xfc\x82;\xd4\x03;\xb0\xc3\x0c\xc7i\x87pX\x87rp\x83th\x07x`\x87t\x18\x87t\xa0\x87\x19\xceS\x0f\xee\x00\x0f\xf2P\x0e\xe4\x90\x0e\xe3@\x0f\xe1
      \x0e\xecP\x0e3 (\x1d\xdc\xc1\x1e\xc2A\x1e\xd2!\x1c\xdc\x81\x1e\xdc\xe0\x1c\xe4\xe1\x1d\xea\x01\x1ef\x18Q8\xb0C:\x9c\x83;\xccP$v`\x07{h\x077`\x87wx\x07x\x98QL\xf4\x90\x0f\xf0P\x0e3\x1ej\x1e\xcaa\x1c\xe8!\x1d\xde\xc1\x1d~\x01\x1e\xe4\xa1\x1c\xcc!\x1d\xf0a\x06T\x85\x838\xcc\xc3;\xb0C=\xd0C9\xfc\xc2<\xe4C;\x88\xc3;\xb0\xc3\x8c\xc5\n\x87y\x98\x87w\x18\x87t\x08\x07z(\x07r\x98\x81\\\xe3\x10\x0e\xec\xc0\x0e\xe5P\x0e\xf30#\xc1\xd2A\x1e\xe4\xe1\x17\xd8\xe1\x1d\xde\x01\x1efH\x19;\xb0\x83=\xb4\x83\x1b\x84\xc38\x8cC9\xcc\xc3<\xb8\xc19\xc8\xc3;\xd4\x03<\xccH\xb4q\x08\x07v`\x07q\x08\x87qX\x87\x19\xdb\xc6\x0e\xec`\x0f\xed\xe0\x06\xf0
      \x0f\xe50\x0f\xe5 \x0f\xf6P\x0en\x10\x0e\xe30\x0e\xe50\x0f\xf3\xe0\x06\xe9\xe0\x0e\xe4P\x0e\xf80#\xe2\xeca\x1c\xc2\x81\x1d\xd8\xe1\x17\xec!\x1d\xe6!\x1d\xc4!\x1d\xd8!\x1d\xe8!\x1ff
      \x9d;\xbcC=\xb8\x039\x94\x839\xccX\xbcpp\x07wx\x07z\x08\x07zH\x87wp\x07\x00\x00y
      \x00\x00.\x00\x00\x00r\x1eH C\x88\x0c\x19\tr2H #\x81\x8c\x91\x91\xd1D\xa0\x10(d<12B\x8e\x90!\xa3H\x10\xb7\x00Q\x84e\x00qir_major_versionqir_minor_versiondynamic_qubit_managementdynamic_result_management\x00#\x08Q2\x82\x10)#\x08\xd12\x82
      13\x0cEP\xcc0\x18\xc21\xc3P\x0c\xc8\x0cCA 2\x12\x98\xa0\x8c\xd8\xd8\xec\xda\\\xda\xde\xc8\xea\xd8\xca\\\xcc\xd8\xc2\xce\xe6F!\x90DY\x00\x00\xa9\x18\x00\x00!\x00\x00\x00\x0b\nr(\x87w\x80\x07zXp\x98C=\xb8\xc38\xb0C9\xd0\xc3\x82\xe6\x1c\xc6\xa1\r\xe8A\x1e\xc2\xc1\x1d\xe6!\x1d\xe8!\x1d\xde\xc1\x1d\x164\xe3`\x0e\xe7P\x0f\xe1
      \x0f\xe4@\x0f\xe1 \x0f\xe7P\x0e\xf4\xb0\x80\x81\x07y(\x87p`\x07vx\x87q\x08\x07z(\x07rXp\x9c\xc38\xb4\x01;\xa4\x83=\x94\xc3\x02k\x1c\xd8!\x1c\xdc\xe1\x1c\xdc
      \x1c\xe4a\x1c\xdc \x1c\xe8\x81\x1e\xc2a\x1c\xd0\xa1\x1c\xc8a\x1c\xc2\x81\x1d\xd8\x01\xd1\x10\x00\x00\x06\x00\x00\x00\x07\xcc<\xa4\x83;\x9c\x03;\x94\x03=\xa0\x83<\x94C8\x90\xc3\x01\x00\x00\x00a
      \x00\x00E\x00\x00\x00\x13\x04A,\x10\x00\x00\x00\x0b\x00\x00\x004K\xa0\x08\x88\x8c\x00\x102\x9d\r\xa6\xd3a\x04\x80\xda\x18\x81\xce\x9as\xce\x9as\xce\xba\xff2F\xa0\xb3\xe6\x9c\xb3\xe6\x9c\xb3\xee?\x00\x00\x00\x00#\x06\x05\x00\x82`PP\xc6\x88A\x01\x80
      \x18$S1b`\x00 \x08\x06\x8b4\x14#\x06\x06\x00\x82`\xe0DB1b`\x00 \x08\x06\x8b4\x14#\x06\x06\x00\x82`\xe0DA1bP\x00
      \x08\x06\tT\x8c\x18\x14\x00\x08\x82A\xf2\x10#\x06\x06\x00\x82`\xb0H\x051bP\x00
      \x08\x06\x89C\x8c\x18\x18\x00\x08\x82\xc1"\r\xc4\x88A\x01\x80 \x18$\r1b`\x00
      \x08\x06\x8bT\x10#\x06\x05\x00\x82`\x904\xc5\x88A\x01\x80 \x18$\x0e1b`\x00 \x08\x06\x8b4\x10#\x06\x06\x00\x82`\xb0HC1bP\x00
      \x08\x06I3\x8c\x18\x14\x00\x08\x82A\xe2\x14#\x06\x06\x00\x82`\xb0HC1bP\x00 \x08\x06IC\x8c\x18\x14\x00\x08\x82A\xf2\x10\x1a\x0e\x04\x00\x02\x00\x00\x00\x07P\x10\xcd\x14a\x00\x00\x00\x00\x00\x00q
      \x00\x00\x03\x00\x00\x002\x0e\x10"\x84\x00\x93\x03\x00\x00\x00\x00\x00\x00\x00\x00]\x0c\x00\x00A\x00\x00\x00\x12\x03\x94\xf6\x01\x00\x00\x00circuit-163__quantum__rt__initialize__quantum__qis__s__body__quantum__qis__cnot__body__quantum__qis__ry__body__quantum__qis__s__adj__quantum__qis__h__body__quantum__qis__t__adj__quantum__qis__t__body14.0.6
      f28c006a5895fc0e329fe15fead81e37457cb1d1\x00\x00\x00\x00\x00\x00'''
    headers:
      Accept:
      - application/xml
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '5917'
      Content-Type:
      - application/octet-stream
      User-Agent:
      - azsdk-python-storage-blob/12.20.0 Python/3.9.19 (Windows-10-10.0.22631-SP0)
      x-ms-blob-type:
      - BlockBlob
      x-ms-date:
      - Thu, 29 Aug 2024 01:13:47 GMT
      x-ms-version:
      - '2024-05-04'
    method: PUT
    uri: https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER
  response:
    body:
      string: ''
    headers:
      content-length:
      - '0'
      x-ms-version:
      - '2024-05-04'
    status:
      code: 201
      message: Created
- request:
    body: 'b''{"id": "00000000-0000-0000-0000-000000000001", "name": "azure-quantum-job",
      "providerId": "microsoft-qc", "target": "microsoft.estimator", "itemType": "Job",
      "containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER",
      "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData",
      "inputDataFormat": "qir.v1", "inputParams": {}, "outputDataFormat": "microsoft.resource-estimates.v1"}'''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '591'
      Content-Type:
      - application/json
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: PUT
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=1
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=rcw&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Waiting", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net:443/job-00000000-0000-0000-0000-000000000001/outputData?sv=PLACEHOLDER&ss=b&srt=co&spr=https&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sp=rwlac&sig=PLACEHOLDER",
        "beginExecutionTime": null, "cancellationTime": null, "quantumComputingData":
        null, "errorData": null, "isCancelling": false, "tags": [], "name": "azure-quantum-job",
        "id": "00000000-0000-0000-0000-000000000001", "providerId": "microsoft-qc",
        "target": "microsoft.estimator", "creationTime": "2024-08-29T01:13:48.6398654+00:00",
        "endExecutionTime": null, "costEstimate": null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1249'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=1
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=c&sp=rcwl&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.input.json&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Waiting", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/outputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER",
        "beginExecutionTime": null, "cancellationTime": null, "quantumComputingData":
        null, "errorData": null, "isCancelling": false, "tags": [], "name": "azure-quantum-job",
        "id": "00000000-0000-0000-0000-000000000001", "providerId": "microsoft-qc",
        "target": "microsoft.estimator", "creationTime": "2024-08-29T01:13:48.6398654+00:00",
        "endExecutionTime": null, "costEstimate": null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1397'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=2
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=c&sp=rcwl&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.input.json&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Waiting", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/outputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER",
        "beginExecutionTime": null, "cancellationTime": null, "quantumComputingData":
        {"count": 1}, "errorData": null, "isCancelling": false, "tags": [], "name":
        "azure-quantum-job", "id": "00000000-0000-0000-0000-000000000001", "providerId":
        "microsoft-qc", "target": "microsoft.estimator", "creationTime": "2024-08-29T01:13:48.6398654+00:00",
        "endExecutionTime": null, "costEstimate": null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1405'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=3
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=c&sp=rcwl&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.input.json&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Waiting", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/outputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER",
        "beginExecutionTime": null, "cancellationTime": null, "quantumComputingData":
        {"count": 1}, "errorData": null, "isCancelling": false, "tags": [], "name":
        "azure-quantum-job", "id": "00000000-0000-0000-0000-000000000001", "providerId":
        "microsoft-qc", "target": "microsoft.estimator", "creationTime": "2024-08-29T01:13:48.6398654+00:00",
        "endExecutionTime": null, "costEstimate": null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1405'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=4
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=c&sp=rcwl&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.input.json&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Waiting", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/outputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER",
        "beginExecutionTime": null, "cancellationTime": null, "quantumComputingData":
        {"count": 1}, "errorData": null, "isCancelling": false, "tags": [], "name":
        "azure-quantum-job", "id": "00000000-0000-0000-0000-000000000001", "providerId":
        "microsoft-qc", "target": "microsoft.estimator", "creationTime": "2024-08-29T01:13:48.6398654+00:00",
        "endExecutionTime": null, "costEstimate": null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1405'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=5
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=c&sp=rcwl&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.input.json&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Waiting", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/outputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER",
        "beginExecutionTime": null, "cancellationTime": null, "quantumComputingData":
        {"count": 1}, "errorData": null, "isCancelling": false, "tags": [], "name":
        "azure-quantum-job", "id": "00000000-0000-0000-0000-000000000001", "providerId":
        "microsoft-qc", "target": "microsoft.estimator", "creationTime": "2024-08-29T01:13:48.6398654+00:00",
        "endExecutionTime": null, "costEstimate": null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1405'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=6
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=c&sp=rcwl&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.input.json&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Executing", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/outputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER",
        "beginExecutionTime": "2024-08-29T01:13:48.9285983Z", "cancellationTime":
        null, "quantumComputingData": {"count": 1}, "errorData": null, "isCancelling":
        false, "tags": [], "name": "azure-quantum-job", "id": "00000000-0000-0000-0000-000000000001",
        "providerId": "microsoft-qc", "target": "microsoft.estimator", "creationTime":
        "2024-08-29T01:13:48.6398654+00:00", "endExecutionTime": null, "costEstimate":
        null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1433'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-quantum/0.0.1 Python/3.9.19 (Windows-10-10.0.22631-SP0)
    method: GET
    uri: https://eastus.quantum.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Quantum/workspaces/myworkspace/jobs/00000000-0000-0000-0000-000000000001?api-version=2022-09-12-preview&test-sequence-id=7
  response:
    body:
      string: '{"containerUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=c&sp=rcwl&sig=PLACEHOLDER",
        "inputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/inputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.input.json&sig=PLACEHOLDER",
        "inputDataFormat": "qir.v1", "inputParams": {}, "metadata": null, "sessionId":
        null, "status": "Succeeded", "jobType": "QuantumComputing", "outputDataFormat":
        "microsoft.resource-estimates.v1", "outputDataUri": "https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/rawOutputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B+filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER",
        "beginExecutionTime": "2024-08-29T01:13:49.0247572Z", "cancellationTime":
        null, "quantumComputingData": {"count": 1}, "errorData": null, "isCancelling":
        false, "tags": [], "name": "azure-quantum-job", "id": "00000000-0000-0000-0000-000000000001",
        "providerId": "microsoft-qc", "target": "microsoft.estimator", "creationTime":
        "2024-08-29T01:13:48.6398654+00:00", "endExecutionTime": "2024-08-29T01:13:51.2846254Z",
        "costEstimate": null, "itemType": "Job"}'
    headers:
      connection:
      - keep-alive
      content-length:
      - '1462'
      content-type:
      - application/json; charset=utf-8
      transfer-encoding:
      - chunked
    status:
      code: 200
      message: OK
- request:
    body: null
    headers:
      Accept:
      - application/xml
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      User-Agent:
      - azsdk-python-storage-blob/12.20.0 Python/3.9.19 (Windows-10-10.0.22631-SP0)
      x-ms-date:
      - Thu, 29 Aug 2024 01:13:52 GMT
      x-ms-range:
      - bytes=0-33554431
      x-ms-version:
      - '2024-05-04'
    method: GET
    uri: https://mystorage.blob.core.windows.net/job-00000000-0000-0000-0000-000000000001/rawOutputData?sv=PLACEHOLDER&st=2000-01-01T00%3A00%3A00Z&se=2050-01-01T00%3A00%3A00Z&sr=b&sp=r&rscd=attachment%3B%20filename%3Dazure-quantum-job-00000000-0000-0000-0000-000000000001.output.json&sig=PLACEHOLDER
  response:
    body:
      string: '{"status": "success", "jobParams": {"qecScheme": {"name": "surface_code",
        "errorCorrectionThreshold": 0.01, "crossingPrefactor": 0.03, "logicalCycleTime":
        "(4 * twoQubitGateTime + 2 * oneQubitMeasurementTime) * codeDistance", "physicalQubitsPerLogicalQubit":
        "2 * codeDistance * codeDistance", "maxCodeDistance": 50}, "errorBudget":
        0.001, "qubitParams": {"instructionSet": "GateBased", "name": "qubit_gate_ns_e3",
        "oneQubitMeasurementTime": "100 ns", "oneQubitGateTime": "50 ns", "twoQubitGateTime":
        "50 ns", "tGateTime": "50 ns", "oneQubitMeasurementErrorRate": 0.001, "oneQubitGateErrorRate":
        0.001, "twoQubitGateErrorRate": 0.001, "tGateErrorRate": 0.001, "idleErrorRate":
        0.001}}, "physicalCounts": {"physicalQubits": 86184, "runtime": 118800, "rqops":
        3333334, "breakdown": {"algorithmicLogicalQubits": 12, "algorithmicLogicalDepth":
        33, "logicalDepth": 33, "numTstates": 31, "clockFrequency": 277777.77777777775,
        "numTfactories": 13, "numTfactoryRuns": 3, "physicalQubitsForTfactories":
        84240, "physicalQubitsForAlgorithm": 1944, "requiredLogicalQubitErrorRate":
        8.417508417508417e-07, "requiredLogicalTstateErrorRate": 1.075268817204301e-05,
        "numTsPerRotation": 12, "cliffordErrorRate": 0.001}}, "physicalCountsFormatted":
        {"runtime": "119 microsecs", "rqops": "3.33M", "physicalQubits": "86.18k",
        "algorithmicLogicalQubits": "12", "algorithmicLogicalDepth": "33", "logicalDepth":
        "33", "numTstates": "31", "numTfactories": "13", "numTfactoryRuns": "3", "physicalQubitsForAlgorithm":
        "1.94k", "physicalQubitsForTfactories": "84.24k", "physicalQubitsForTfactoriesPercentage":
        "97.74 %", "requiredLogicalQubitErrorRate": "8.42e-7", "requiredLogicalTstateErrorRate":
        "1.08e-5", "physicalQubitsPerLogicalQubit": "162", "logicalCycleTime": "4
        microsecs", "clockFrequency": "277.78k", "logicalErrorRate": "3.00e-7", "tfactoryPhysicalQubits":
        "6.48k", "tfactoryRuntime": "47 microsecs", "numInputTstates": "30", "numUnitsPerRound":
        "2", "unitNamePerRound": "15-to-1 space efficient", "codeDistancePerRound":
        "9", "physicalQubitsPerRound": "6.48k", "tfactoryRuntimePerRound": "47 microsecs",
        "tstateLogicalErrorRate": "2.17e-6", "logicalCountsNumQubits": "3", "logicalCountsTCount":
        "7", "logicalCountsRotationCount": "2", "logicalCountsRotationDepth": "2",
        "logicalCountsCczCount": "0", "logicalCountsCcixCount": "0", "logicalCountsMeasurementCount":
        "0", "errorBudget": "1.00e-3", "errorBudgetLogical": "3.33e-4", "errorBudgetTstates":
        "3.33e-4", "errorBudgetRotations": "3.33e-4", "numTsPerRotation": "12", "logicalDepthFactor":
        "constraint not set", "maxTFactories": "constraint not set", "maxDuration":
        "constraint not set", "maxPhysicalQubits": "constraint not set"}, "logicalQubit":
        {"codeDistance": 9, "physicalQubits": 162, "logicalCycleTime": 3600, "logicalErrorRate":
        3.0000000000000015e-07}, "tfactory": {"physicalQubits": 6480, "runtime": 46800,
        "numTstates": 1, "numInputTstates": 30, "numRounds": 1, "numUnitsPerRound":
        [2], "unitNamePerRound": ["15-to-1 space efficient"], "codeDistancePerRound":
        [9], "physicalQubitsPerRound": [6480], "runtimePerRound": [46800], "logicalErrorRate":
        2.165000000000001e-06}, "errorBudget": {"logical": 0.0003333333333333333,
        "tstates": 0.0003333333333333333, "rotations": 0.0003333333333333333}, "logicalCounts":
        {"numQubits": 3, "tCount": 7, "rotationCount": 2, "rotationDepth": 2, "cczCount":
        0, "ccixCount": 0, "measurementCount": 0}, "reportData": {"groups": [{"title":
        "Physical resource estimates", "alwaysVisible": true, "entries": [{"path":
        "physicalCountsFormatted/runtime", "label": "Runtime", "description": "Total
        runtime", "explanation": "This is a runtime estimate for the execution time
        of the algorithm.  In general, the execution time corresponds to the duration
        of one logical cycle (3,600 nanosecs) multiplied by the 33 logical cycles
        to run the algorithm.  If however the duration of a single T factory (here:
        46,800 nanosecs) is larger than the algorithm runtime, we extend the number
        of logical cycles artificially in order to exceed the runtime of a single
        T factory."}, {"path": "physicalCountsFormatted/rqops", "label": "rQOPS",
        "description": "Reliable quantum operations per second", "explanation": "The
        value is computed as the number of logical qubits after layout (12) (with
        a logical error rate of 8.42e-7) multiplied by the clock frequency (277,777.78),
        which is the number of logical cycles per second."}, {"path": "physicalCountsFormatted/physicalQubits",
        "label": "Physical qubits", "description": "Number of physical qubits", "explanation":
        "This value represents the total number of physical qubits, which is the sum
        of 1,944 physical qubits to implement the algorithm logic, and 84,240 physical
        qubits to execute the T factories that are responsible to produce the T states
        that are consumed by the algorithm."}]}, {"title": "Resource estimates breakdown",
        "alwaysVisible": false, "entries": [{"path": "physicalCountsFormatted/algorithmicLogicalQubits",
        "label": "Logical algorithmic qubits", "description": "Number of logical qubits
        for the algorithm after layout", "explanation": "Laying out the logical qubits
        in the presence of nearest-neighbor constraints requires additional logical
        qubits.  In particular, to layout the $Q_{\\rm alg} = 3$ logical qubits in
        the input algorithm, we require in total $2 \\cdot Q_{\\rm alg} + \\lceil
        \\sqrt{8 \\cdot Q_{\\rm alg}}\\rceil + 1 = 12$ logical qubits."}, {"path":
        "physicalCountsFormatted/algorithmicLogicalDepth", "label": "Algorithmic depth",
        "description": "Number of logical cycles for the algorithm", "explanation":
        "To execute the algorithm using _Parallel Synthesis Sequential Pauli Computation_
        (PSSPC), operations are scheduled in terms of multi-qubit Pauli measurements,
        for which assume an execution time of one logical cycle.  Based on the input
        algorithm, we require one multi-qubit measurement for the 0 single-qubit measurements,
        the 2 arbitrary single-qubit rotations, and the 7 T gates, three multi-qubit
        measurements for each of the 0 CCZ and 0 CCiX gates in the input program,
        as well as 12 multi-qubit measurements for each of the 2 non-Clifford layers
        in which there is at least one single-qubit rotation with an arbitrary angle
        rotation."}, {"path": "physicalCountsFormatted/logicalDepth", "label": "Logical
        depth", "description": "Number of logical cycles performed", "explanation":
        "This number is usually equal to the logical depth of the algorithm, which
        is 33.  However, in the case in which a single T factory is slower than the
        execution time of the algorithm, we adjust the logical cycle depth to exceed
        the T factory''s execution time."}, {"path": "physicalCountsFormatted/clockFrequency",
        "label": "Clock frequency", "description": "Number of logical cycles per second",
        "explanation": "This is the number of logical cycles that can be performed
        within one second.  The logical cycle time is 4 microsecs."}, {"path": "physicalCountsFormatted/numTstates",
        "label": "Number of T states", "description": "Number of T states consumed
        by the algorithm", "explanation": "To execute the algorithm, we require one
        T state for each of the 7 T gates, four T states for each of the 0 CCZ and
        0 CCiX gates, as well as 12 for each of the 2 single-qubit rotation gates
        with arbitrary angle rotation."}, {"path": "physicalCountsFormatted/numTfactories",
        "label": "Number of T factories", "description": "Number of T factories capable
        of producing the demanded 31 T states during the algorithm''s runtime", "explanation":
        "The total number of T factories 13 that are executed in parallel is computed
        as $\\left\\lceil\\dfrac{\\text{T states}\\cdot\\text{T factory duration}}{\\text{T
        states per T factory}\\cdot\\text{algorithm runtime}}\\right\\rceil = \\left\\lceil\\dfrac{31
        \\cdot 46,800\\;\\text{ns}}{1 \\cdot 118,800\\;\\text{ns}}\\right\\rceil$"},
        {"path": "physicalCountsFormatted/numTfactoryRuns", "label": "Number of T
        factory invocations", "description": "Number of times all T factories are
        invoked", "explanation": "In order to prepare the 31 T states, the 13 copies
        of the T factory are repeatedly invoked 3 times."}, {"path": "physicalCountsFormatted/physicalQubitsForAlgorithm",
        "label": "Physical algorithmic qubits", "description": "Number of physical
        qubits for the algorithm after layout", "explanation": "The 1,944 are the
        product of the 12 logical qubits after layout and the 162 physical qubits
        that encode a single logical qubit."}, {"path": "physicalCountsFormatted/physicalQubitsForTfactories",
        "label": "Physical T factory qubits", "description": "Number of physical qubits
        for the T factories", "explanation": "Each T factory requires 6,480 physical
        qubits and we run 13 in parallel, therefore we need $84,240 = 6,480 \\cdot
        13$ qubits."}, {"path": "physicalCountsFormatted/requiredLogicalQubitErrorRate",
        "label": "Required logical qubit error rate", "description": "The minimum
        logical qubit error rate required to run the algorithm within the error budget",
        "explanation": "The minimum logical qubit error rate is obtained by dividing
        the logical error probability 3.33e-4 by the product of 12 logical qubits
        and the total cycle count 33."}, {"path": "physicalCountsFormatted/requiredLogicalTstateErrorRate",
        "label": "Required logical T state error rate", "description": "The minimum
        T state error rate required for distilled T states", "explanation": "The minimum
        T state error rate is obtained by dividing the T distillation error probability
        3.33e-4 by the total number of T states 31."}, {"path": "physicalCountsFormatted/numTsPerRotation",
        "label": "Number of T states per rotation", "description": "Number of T states
        to implement a rotation with an arbitrary angle", "explanation": "The number
        of T states to implement a rotation with an arbitrary angle is $\\lceil 0.53
        \\log_2(2 / 0.0003333333333333333) + 5.3\\rceil$ [[arXiv:2203.10064](https://arxiv.org/abs/2203.10064)].  For
        simplicity, we use this formula for all single-qubit arbitrary angle rotations,
        and do not distinguish between best, worst, and average cases."}]}, {"title":
        "Logical qubit parameters", "alwaysVisible": false, "entries": [{"path": "jobParams/qecScheme/name",
        "label": "QEC scheme", "description": "Name of QEC scheme", "explanation":
        "You can load pre-defined QEC schemes by using the name `surface_code` or
        `floquet_code`. The latter only works with Majorana qubits."}, {"path": "logicalQubit/codeDistance",
        "label": "Code distance", "description": "Required code distance for error
        correction", "explanation": "The code distance is the smallest odd integer
        greater or equal to $\\dfrac{2\\log(0.03 / 0.0000008417508417508417)}{\\log(0.01/0.001)}
        - 1$"}, {"path": "physicalCountsFormatted/physicalQubitsPerLogicalQubit",
        "label": "Physical qubits", "description": "Number of physical qubits per
        logical qubit", "explanation": "The number of physical qubits per logical
        qubit are evaluated using the formula 2 * codeDistance * codeDistance that
        can be user-specified."}, {"path": "physicalCountsFormatted/logicalCycleTime",
        "label": "Logical cycle time", "description": "Duration of a logical cycle
        in nanoseconds", "explanation": "The runtime of one logical cycle in nanoseconds
        is evaluated using the formula (4 * twoQubitGateTime + 2 * oneQubitMeasurementTime)
        * codeDistance that can be user-specified."}, {"path": "physicalCountsFormatted/logicalErrorRate",
        "label": "Logical qubit error rate", "description": "Logical qubit error rate",
        "explanation": "The logical qubit error rate is computed as $0.03 \\cdot \\left(\\dfrac{0.001}{0.01}\\right)^\\frac{9
        + 1}{2}$"}, {"path": "jobParams/qecScheme/crossingPrefactor", "label": "Crossing
        prefactor", "description": "Crossing prefactor used in QEC scheme", "explanation":
        "The crossing prefactor is usually extracted numerically from simulations
        when fitting an exponential curve to model the relationship between logical
        and physical error rate."}, {"path": "jobParams/qecScheme/errorCorrectionThreshold",
        "label": "Error correction threshold", "description": "Error correction threshold
        used in QEC scheme", "explanation": "The error correction threshold is the
        physical error rate below which the error rate of the logical qubit is less
        than the error rate of the physical qubit that constitute it.  This value
        is usually extracted numerically from simulations of the logical error rate."},
        {"path": "jobParams/qecScheme/logicalCycleTime", "label": "Logical cycle time
        formula", "description": "QEC scheme formula used to compute logical cycle
        time", "explanation": "This is the formula that is used to compute the logical
        cycle time 3,600 ns."}, {"path": "jobParams/qecScheme/physicalQubitsPerLogicalQubit",
        "label": "Physical qubits formula", "description": "QEC scheme formula used
        to compute number of physical qubits per logical qubit", "explanation": "This
        is the formula that is used to compute the number of physical qubits per logical
        qubits 162."}]}, {"title": "T factory parameters", "alwaysVisible": false,
        "entries": [{"path": "physicalCountsFormatted/tfactoryPhysicalQubits", "label":
        "Physical qubits", "description": "Number of physical qubits for a single
        T factory", "explanation": "This corresponds to the maximum number of physical
        qubits over all rounds of T distillation units in a T factory.  A round of
        distillation contains of multiple copies of distillation units to achieve
        the required success probability of producing a T state with the expected
        logical T state error rate."}, {"path": "physicalCountsFormatted/tfactoryRuntime",
        "label": "Runtime", "description": "Runtime of a single T factory", "explanation":
        "The runtime of a single T factory is the accumulated runtime of executing
        each round in a T factory."}, {"path": "tfactory/numTstates", "label": "Number
        of output T states per run", "description": "Number of output T states produced
        in a single run of T factory", "explanation": "The T factory takes as input
        30 noisy physical T states with an error rate of 0.001 and produces 1 T states
        with an error rate of 2.17e-6."}, {"path": "physicalCountsFormatted/numInputTstates",
        "label": "Number of input T states per run", "description": "Number of physical
        input T states consumed in a single run of a T factory", "explanation": "This
        value includes the physical input T states of all copies of the distillation
        unit in the first round."}, {"path": "tfactory/numRounds", "label": "Distillation
        rounds", "description": "The number of distillation rounds", "explanation":
        "This is the number of distillation rounds.  In each round one or multiple
        copies of some distillation unit is executed."}, {"path": "physicalCountsFormatted/numUnitsPerRound",
        "label": "Distillation units per round", "description": "The number of units
        in each round of distillation", "explanation": "This is the number of copies
        for the distillation units per round."}, {"path": "physicalCountsFormatted/unitNamePerRound",
        "label": "Distillation units", "description": "The types of distillation units",
        "explanation": "These are the types of distillation units that are executed
        in each round.  The units can be either physical or logical, depending on
        what type of qubit they are operating.  Space-efficient units require fewer
        qubits for the cost of longer runtime compared to Reed-Muller preparation
        units."}, {"path": "physicalCountsFormatted/codeDistancePerRound", "label":
        "Distillation code distances", "description": "The code distance in each round
        of distillation", "explanation": "This is the code distance used for the units
        in each round.  If the code distance is 1, then the distillation unit operates
        on physical qubits instead of error-corrected logical qubits."}, {"path":
        "physicalCountsFormatted/physicalQubitsPerRound", "label": "Number of physical
        qubits per round", "description": "The number of physical qubits used in each
        round of distillation", "explanation": "The maximum number of physical qubits
        over all rounds is the number of physical qubits for the T factory, since
        qubits are reused by different rounds."}, {"path": "physicalCountsFormatted/tfactoryRuntimePerRound",
        "label": "Runtime per round", "description": "The runtime of each distillation
        round", "explanation": "The runtime of the T factory is the sum of the runtimes
        in all rounds."}, {"path": "physicalCountsFormatted/tstateLogicalErrorRate",
        "label": "Logical T state error rate", "description": "Logical T state error
        rate", "explanation": "This is the logical T state error rate achieved by
        the T factory which is equal or smaller than the required error rate 1.08e-5."}]},
        {"title": "Pre-layout logical resources", "alwaysVisible": false, "entries":
        [{"path": "physicalCountsFormatted/logicalCountsNumQubits", "label": "Logical
        qubits (pre-layout)", "description": "Number of logical qubits in the input
        quantum program", "explanation": "We determine 12 algorithmic logical qubits
        from this number by assuming to align them in a 2D grid.  Auxiliary qubits
        are added to allow for sufficient space to execute multi-qubit Pauli measurements
        on all or a subset of the logical qubits."}, {"path": "physicalCountsFormatted/logicalCountsTCount",
        "label": "T gates", "description": "Number of T gates in the input quantum
        program", "explanation": "This includes all T gates and adjoint T gates, but
        not T gates used to implement rotation gates with arbitrary angle, CCZ gates,
        or CCiX gates."}, {"path": "physicalCountsFormatted/logicalCountsRotationCount",
        "label": "Rotation gates", "description": "Number of rotation gates in the
        input quantum program", "explanation": "This is the number of all rotation
        gates. If an angle corresponds to a Pauli, Clifford, or T gate, it is not
        accounted for in this number."}, {"path": "physicalCountsFormatted/logicalCountsRotationDepth",
        "label": "Rotation depth", "description": "Depth of rotation gates in the
        input quantum program", "explanation": "This is the number of all non-Clifford
        layers that include at least one single-qubit rotation gate with an arbitrary
        angle."}, {"path": "physicalCountsFormatted/logicalCountsCczCount", "label":
        "CCZ gates", "description": "Number of CCZ-gates in the input quantum program",
        "explanation": "This is the number of CCZ gates."}, {"path": "physicalCountsFormatted/logicalCountsCcixCount",
        "label": "CCiX gates", "description": "Number of CCiX-gates in the input quantum
        program", "explanation": "This is the number of CCiX gates, which applies
        $-iX$ controlled on two control qubits [[1212.5069](https://arxiv.org/abs/1212.5069)]."},
        {"path": "physicalCountsFormatted/logicalCountsMeasurementCount", "label":
        "Measurement operations", "description": "Number of single qubit measurements
        in the input quantum program", "explanation": "This is the number of single
        qubit measurements in Pauli basis that are used in the input program.  Note
        that all measurements are counted, however, the measurement result is is determined
        randomly (with a fixed seed) to be 0 or 1 with a probability of 50%."}]},
        {"title": "Assumed error budget", "alwaysVisible": false, "entries": [{"path":
        "physicalCountsFormatted/errorBudget", "label": "Total error budget", "description":
        "Total error budget for the algorithm", "explanation": "The total error budget
        sets the overall allowed error for the algorithm, i.e., the number of times
        it is allowed to fail.  Its value must be between 0 and 1 and the default
        value is 0.001, which corresponds to 0.1%, and means that the algorithm is
        allowed to fail once in 1000 executions.  This parameter is highly application
        specific. For example, if one is running Shor''s algorithm for factoring integers,
        a large value for the error budget may be tolerated as one can check that
        the output are indeed the prime factors of the input.  On the other hand,
        a much smaller error budget may be needed for an algorithm solving a problem
        with a solution which cannot be efficiently verified.  This budget $\\epsilon
        = \\epsilon_{\\log} + \\epsilon_{\\rm dis} + \\epsilon_{\\rm syn}$ is uniformly
        distributed and applies to errors $\\epsilon_{\\log}$ to implement logical
        qubits, an error budget $\\epsilon_{\\rm dis}$ to produce T states through
        distillation, and an error budget $\\epsilon_{\\rm syn}$ to synthesize rotation
        gates with arbitrary angles.  Note that for distillation and rotation synthesis,
        the respective error budgets $\\epsilon_{\\rm dis}$ and $\\epsilon_{\\rm syn}$
        are uniformly distributed among all T states and all rotation gates, respectively.
        If there are no rotation gates in the input algorithm, the error budget is
        uniformly distributed to logical errors and T state errors."}, {"path": "physicalCountsFormatted/errorBudgetLogical",
        "label": "Logical error probability", "description": "Probability of at least
        one logical error", "explanation": "This is one third of the total error budget
        1.00e-3 if the input algorithm contains rotation with gates with arbitrary
        angles, or one half of it, otherwise."}, {"path": "physicalCountsFormatted/errorBudgetTstates",
        "label": "T distillation error probability", "description": "Probability of
        at least one faulty T distillation", "explanation": "This is one third of
        the total error budget 1.00e-3 if the input algorithm contains rotation with
        gates with arbitrary angles, or one half of it, otherwise."}, {"path": "physicalCountsFormatted/errorBudgetRotations",
        "label": "Rotation synthesis error probability", "description": "Probability
        of at least one failed rotation synthesis", "explanation": "This is one third
        of the total error budget 1.00e-3."}]}, {"title": "Physical qubit parameters",
        "alwaysVisible": false, "entries": [{"path": "jobParams/qubitParams/name",
        "label": "Qubit name", "description": "Some descriptive name for the qubit
        model", "explanation": "You can load pre-defined qubit parameters by using
        the names `qubit_gate_ns_e3`, `qubit_gate_ns_e4`, `qubit_gate_us_e3`, `qubit_gate_us_e4`,
        `qubit_maj_ns_e4`, or `qubit_maj_ns_e6`.  The names of these pre-defined qubit
        parameters indicate the instruction set (gate-based or Majorana), the operation
        speed (ns or \u00b5s regime), as well as the fidelity (e.g., e3 for $10^{-3}$
        gate error rates)."}, {"path": "jobParams/qubitParams/instructionSet", "label":
        "Instruction set", "description": "Underlying qubit technology (gate-based
        or Majorana)", "explanation": "When modeling the physical qubit abstractions,
        we distinguish between two different physical instruction sets that are used
        to operate the qubits.  The physical instruction set can be either *gate-based*
        or *Majorana*.  A gate-based instruction set provides single-qubit measurement,
        single-qubit gates (incl. T gates), and two-qubit gates.  A Majorana instruction
        set provides a physical T gate, single-qubit measurement and two-qubit joint
        measurement operations."}, {"path": "jobParams/qubitParams/oneQubitMeasurementTime",
        "label": "Single-qubit measurement time", "description": "Operation time for
        single-qubit measurement (t_meas) in ns", "explanation": "This is the operation
        time in nanoseconds to perform a single-qubit measurement in the Pauli basis."},
        {"path": "jobParams/qubitParams/oneQubitGateTime", "label": "Single-qubit
        gate time", "description": "Operation time for single-qubit gate (t_gate)
        in ns", "explanation": "This is the operation time in nanoseconds to perform
        a single-qubit Clifford operation, e.g., Hadamard or Phase gates."}, {"path":
        "jobParams/qubitParams/twoQubitGateTime", "label": "Two-qubit gate time",
        "description": "Operation time for two-qubit gate in ns", "explanation": "This
        is the operation time in nanoseconds to perform a two-qubit Clifford operation,
        e.g., a CNOT or CZ gate."}, {"path": "jobParams/qubitParams/tGateTime", "label":
        "T gate time", "description": "Operation time for a T gate", "explanation":
        "This is the operation time in nanoseconds to execute a T gate."}, {"path":
        "jobParams/qubitParams/oneQubitMeasurementErrorRate", "label": "Single-qubit
        measurement error rate", "description": "Error rate for single-qubit measurement",
        "explanation": "This is the probability in which a single-qubit measurement
        in the Pauli basis may fail."}, {"path": "jobParams/qubitParams/oneQubitGateErrorRate",
        "label": "Single-qubit error rate", "description": "Error rate for single-qubit
        Clifford gate (p)", "explanation": "This is the probability in which a single-qubit
        Clifford operation, e.g., Hadamard or Phase gates, may fail."}, {"path": "jobParams/qubitParams/twoQubitGateErrorRate",
        "label": "Two-qubit error rate", "description": "Error rate for two-qubit
        Clifford gate", "explanation": "This is the probability in which a two-qubit
        Clifford operation, e.g., CNOT or CZ gates, may fail."}, {"path": "jobParams/qubitParams/tGateErrorRate",
        "label": "T gate error rate", "description": "Error rate to prepare single-qubit
        T state or apply a T gate (p_T)", "explanation": "This is the probability
        in which executing a single T gate may fail."}]}, {"title": "Constraints",
        "alwaysVisible": false, "entries": [{"path": "physicalCountsFormatted/logicalDepthFactor",
        "label": "Logical depth factor", "description": "Factor, the initial number
        of logical cycles is multiplied by", "explanation": "This is the factor takes
        into account a potential overhead to the initial number of logical cycles."},
        {"path": "physicalCountsFormatted/maxTFactories", "label": "Maximum number
        of T factories", "description": "The maximum number of T factories can be
        utilized during the algorithm''s runtime", "explanation": "This is the maximum
        number of T factories used for producing the demanded T states, which can
        be created and executed by the algorithm in parallel."}, {"path": "physicalCountsFormatted/maxDuration",
        "label": "Maximum runtime duration", "description": "The maximum runtime duration
        allowed for the algorithm runtime", "explanation": "This is the maximum time
        allowed to the algorithm. If specified, the estimator targets to minimize
        the number of physical qubits consumed by the algorithm for runtimes under
        the maximum allowed."}, {"path": "physicalCountsFormatted/maxPhysicalQubits",
        "label": "Maximum number of physical qubits", "description": "The maximum
        number of physical qubits allowed for utilization to the algorith", "explanation":
        "This is the maximum number of physical qubits available to the algorithm.
        If specified, the estimator targets to minimize the runtime of the algorithm
        with number of physical qubits consumed not exceeding this maximum."}]}],
        "assumptions": ["_More details on the following lists of assumptions can be
        found in the paper [Accessing requirements for scaling quantum computers and
        their applications](https://aka.ms/AQ/RE/Paper)._", "**Uniform independent
        physical noise.** We assume that the noise on physical qubits and physical
        qubit operations is the standard circuit noise model. In particular we assume
        error events at different space-time locations are independent and that error
        rates are uniform across the system in time and space.", "**Efficient classical
        computation.** We assume that classical overhead (compilation, control, feedback,
        readout, decoding, etc.) does not dominate the overall cost of implementing
        the full quantum algorithm.", "**Extraction circuits for planar quantum ISA.**
        We assume that stabilizer extraction circuits with similar depth and error
        correction performance to those for standard surface and Hastings-Haah code
        patches can be constructed to implement all operations of the planar quantum
        ISA (instruction set architecture).", "**Uniform independent logical noise.**
        We assume that the error rate of a logical operation is approximately equal
        to its space-time volume (the number of tiles multiplied by the number of
        logical time steps) multiplied by the error rate of a logical qubit in a standard
        one-tile patch in one logical time step.", "**Negligible Clifford costs for
        synthesis.** We assume that the space overhead for synthesis and space and
        time overhead for transport of magic states within magic state factories and
        to synthesis qubits are all negligible.", "**Smooth magic state consumption
        rate.** We assume that the rate of T state consumption throughout the compiled
        algorithm is almost constant, or can be made almost constant without significantly
        increasing the number of logical time steps for the algorithm."]}}'
    headers:
      accept-ranges:
      - bytes
      content-length:
      - '28211'
      content-range:
      - bytes 0-27459/27460
      content-type:
      - application/json
      x-ms-blob-content-md5:
      - +ShdGxZO8CaXRZTECvsZZA==
      x-ms-blob-type:
      - BlockBlob
      x-ms-creation-time:
      - Thu, 29 Aug 2024 01:13:48 GMT
      x-ms-lease-state:
      - available
      x-ms-lease-status:
      - unlocked
      x-ms-server-encrypted:
      - 'true'
      x-ms-version:
      - '2024-05-04'
    status:
      code: 206
      message: Partial Content
version: 1
